#2658. Maximum Number of Fish in a Grid
class Solution {
    private int dfs(int[][] grid, int r, int c) {
        // Base case: Check for out-of-bounds or if the cell is land (0)
        if (r < 0 || r >= grid.length || c < 0 || c >= grid[0].length || grid[r][c] == 0) {
            return 0;
        }

        // Catch all fish in the current cell and mark it as visited by setting it to 0
        int fish = grid[r][c];
        grid[r][c] = 0;

        // Explore all 4 directions: up, down, left, right
        fish += dfs(grid, r + 1, c);
        fish += dfs(grid, r - 1, c);
        fish += dfs(grid, r, c + 1);
        fish += dfs(grid, r, c - 1);

        return fish;
    }

    public int findMaxFish(int[][] grid) {
        int maxFish = 0;

        // Iterate over all cells in the grid
        for (int r = 0; r < grid.length; r++) {
            for (int c = 0; c < grid[0].length; c++) {
                // If the cell contains fish, start a DFS to collect fish
                if (grid[r][c] > 0) {
                    maxFish = Math.max(maxFish, dfs(grid, r, c));
                }
            }
        }

        return maxFish;
    }
}
