873. Length of Longest Fibonacci Subsequence

class Solution {
    public int lenLongestFibSubseq(int[] arr) {
        int n = arr.length;
        Map<Integer, Integer> index = new HashMap<>();
        for (int i = 0; i < n; i++) {
            index.put(arr[i], i);
        }

        int[][] dp = new int[n][n];
        int maxLen = 0;

        for (int j = 1; j < n; j++) {
            for (int i = 0; i < j; i++) {
                int ak = arr[j] - arr[i];

                if (ak < arr[i] && index.containsKey(ak)) {
                    int k = index.get(ak);
                    dp[i][j] = dp[k][i] > 0 ? dp[k][i] + 1 : 3;
                    maxLen = Math.max(maxLen, dp[i][j]);
                }
            }
        }

        return maxLen;
    }
}

