#1800. Maximum Ascending Subarray Sum
class Solution {
    public int maxAscendingSum(int[] nums) {
        int maxSum = nums[0]; // Initialize with the first element
        int currentSum = nums[0]; 

        for (int i = 1; i < nums.length; i++) {
            if (nums[i] > nums[i - 1]) {
                currentSum += nums[i]; // Continue the ascending subarray
            } else {
                maxSum = Math.max(maxSum, currentSum); // Update max sum
                currentSum = nums[i]; // Reset for a new subarray
            }
        }

        // Final check to ensure the last subarray is considered
        return Math.max(maxSum, currentSum);
    }
}
